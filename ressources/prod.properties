############################################################################
#Prod Properties
############################################################################

driverClassName	= org.postgresql.Driver
url 			= jdbc:postgresql://studentittools.ipl.be:5432/dbkodjo_adegnon?user=kodjo_adegnon&password=onvisele18
DB 				= dbkodjo_adegnon
serverPort 		= 8080

!Config 
############################################################################
AppConfig	=	core.config.AppConfig
AppContext	=	core.AppContext


!Factory 
############################################################################
EntiteFactory		= 	domaine.factory.EntiteFactoryImpl
DaoFactory			=	dal.dao.core.DaoFactory

!UCC
############################################################################
DalService			=	dal.service.DalServiceImpl
QuidamUcc			= 	domaine.ucc.QuidamUccImpl
EtudiantUcc			= 	domaine.ucc.EtudiantUccImpl
ProfesseurUcc		= 	domaine.ucc.ProfesseurUccImpl


!DAL && DAO 
############################################################################
DalBackendService	= 	dal.service.DalServiceImpl
DaoFactory			=	dal.dao.core.DaoFactoryImpl
UserDao				= 	dal.dao.UserDaoImpl
UserInfoDao			= 	dal.dao.UserInfoDaoImpl
DepartementDao		= 	dal.dao.DepartementDaoImpl
ChoixMobiliteDao	= 	dal.dao.ChoixMobiliteDaoImpl
DemandeMobiliteDao	=	dal.dao.DemandeMobiliteDaoImpl
PartenaireDao		= 	dal.dao.PartenaireDaoImpl
PaysDao				= 	dal.dao.PaysDaoImpl
ProgrammeDao		=	dal.dao.ProgrammeDaoImpl
TypeProgrammeDao	=	dal.dao.TypeProgrammeDaoImpl
AnnulationDao		= 	dal.dao.AnnulationDaoImpl
DocumentDao			=	dal.dao.DocumentDaoImpl
LogicielDao			=	dal.dao.LogicielDaoImpl


!DTO 
############################################################################
User 				= 	domaine.bizz.User
UserDto 			= 	domaine.bizz.User

UserInfo			=	domaine.bizz.UserInfo
UserInfoDto			=	domaine.bizz.UserInfo

Departement			= 	domaine.bizz.Departement
DepartementDto		=	domaine.bizz.Departement

ChoixMobilite		= 	domaine.bizz.ChoixMobilite
ChoixMobiliteDto	=	domaine.bizz.ChoixMobilite

Partenaire			= 	domaine.bizz.Partenaire
PartenaireDto		=	domaine.bizz.Partenaire

Pays				=	domaine.bizz.Pays
PaysDto				=	domaine.bizz.Pays

DemandeMobilite		=	domaine.bizz.DemandeMobilite
DemandeMobiliteDto	=	domaine.bizz.DemandeMobilite

Programme			= 	domaine.bizz.Programme
ProgrammeDto		= 	domaine.bizz.Programme

TypeProgramme		= 	domaine.bizz.TypeProgramme
TypeProgrammeDto	= 	domaine.bizz.TypeProgramme

Annulation			=	domaine.bizz.Annulation
AnnulationDto		=	domaine.bizz.Annulation

Document			=	domaine.bizz.Document
DocumentDto			=	domaine.bizz.Document

Logiciel			=	domaine.bizz.Logiciel
LogicielDto			=	domaine.bizz.Logiciel

!SQL c:create(INSERT)	r:read(SELECT)	u:update(UPDATE)	d:delete(DELETE)		
############################################################################

	#Query Generiques
	#########################################
	r_all				=	SELECT * FROM %s 
	
	r_id				=	SELECT * FROM %s WHERE id = ?
	
	
	
	!Query UserDao
	#########################################
	c_user				= INSERT INTO gerasmus.utilisateurs(pseudo, mdp, nom, prenom, departement, email, date_inscription,prof,avatar,num_version) VALUES (?, ?, ?, ?, ?, ?, ?, ?,NULL, 1);
	
	r_pseudo_user		= SELECT * FROM gerasmus.utilisateurs WHERE pseudo = ? 
	
	r_mail_user			= SELECT * FROM gerasmus.utilisateurs WHERE email = ? 
	
	r_name_user			= SELECT * FROM gerasmus.utilisateurs WHERE nom ILIKE ? AND prenom ILIKE ? 
	
	r_pat_createur		= SELECT creat.* FROM gerasmus.utilisateurs creat, gerasmus.partenaires part WHERE part.id = ? AND part.createur IS NOT NULL AND part.createur = creat.id
	
	r_mobi_etud			= SELECT etud.* FROM gerasmus.utilisateurs etud, gerasmus.demandes_mobilites dm WHERE dm.id = ? AND dm.etudiant = etud.id
	
	
	
	!Query PartenaireDao
	#########################################
	c_partenaire		= INSERT INTO gerasmus.partenaires( nom_legal, nom_affaire, type_organisation, nb_employe, adresse, pays, region, ville, email, site_web, tel, createur,nom_complet,visible, num_version) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?,TRUE, 1);
	
	c_departement_part	= INSERT INTO gerasmus.departements_partenaire(id_departement, id_partenaire, num_version) VALUES (?, ?, 1);
	
	r_part_for_student  = SELECT part.* FROM gerasmus.partenaires part, gerasmus.utilisateurs etud, gerasmus.departements_partenaire dp WHERE part.createur IS NULL AND part.visible = true AND etud.id = ? and etud.departement = dp.id_departement AND dp.id_partenaire = part.id ;

	r_part_for_all      = SELECT * FROM gerasmus.partenaires part WHERE createur IS NULL;

	r_mobi_part			= SELECT part.* FROM gerasmus.partenaires part, gerasmus.choix_mobilites cm WHERE cm.candidature = ? AND cm.num_preference = ? AND partenaire = part.id
	
	r_user_pat			= SELECT * FROM gerasmus.partenaires WHERE createur = ? ;
		
	r_part_demander		= SELECT * FROM gerasmus.partenaires WHERE nom_legal ILIKE ? AND ville ILIKE ? AND pays IN (SELECT id FROM gerasmus.pays where nom ILIKE ?); 
	
	r_part_cachable     = SELECT * FROM gerasmus.partenaires WHERE id NOT IN (SELECT DISTINCT partenaire FROM gerasmus.choix_mobilites)
	
	u_part_visibilite   = UPDATE gerasmus.partenaires SET visible = ?, num_version = num_version + 1 WHERE num_version = ?;

	
	!Query DepartementDao
	#########################################
	c_departement		= INSERT INTO gerasmus.departements(code,nom,num_version) VALUES (?, ?, 1);
	
	r_code_departement	= SELECT * FROM gerasmus.departements WHERE code = ? 
	
	r_user_departement	= SELECT dep.* FROM gerasmus.departements as dep, gerasmus.utilisateurs as etud WHERE  etud.id = ? AND  etud.departement = dep.id ;
	
	r_part_departement	= SELECT dep.* FROM gerasmus.partenaires pat , gerasmus.departements_partenaire dep_pat,  gerasmus.departements dep WHERE pat.id = ? AND pat.id = dep_pat.id_partenaire AND dep.id = dep_pat.id_departement;
	
	
	
	!Query PaysDao
	#########################################
	r_part_pays			= SELECT pays.* FROM gerasmus.partenaires pat , gerasmus.pays pays WHERE pat.id = ? and pat.pays = pays.id;	
	


	!Query ProgrammeDao
	#########################################
	c_prog				= INSERT INTO gerasmus.programmes(nom,num_version)  VALUES (?, 1);
	
	r_name_prog			= SELECT * FROM gerasmus.programmes WHERE nom = ? ;


	
	!Query TypeProgrammeDao
	#########################################
	# J'ai prevu d'ajouter une possiblité pour les profs de rajouter ce genre de trucs ( Programmes, Type Programmes, Departements,...) 
	c_type_prog			= INSERT INTO gerasmus.types_programme(nom,num_version)  VALUES (?, 1);
	
	r_name_type_prog	= SELECT * FROM gerasmus.types_programme WHERE nom = ? ;
	

	
	!Query UserInfoDao
	#########################################
	c_user_info			= INSERT INTO gerasmus.informations_etudiants(id, civilite, nationalite, adresse, tel, email, sexe, compte_bancaire, compte_titulaire, nom_banque, code_bic, date_naissance, nb_annees_reussies, num_version)  VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 1); 
	
	r_compte_bancaire   = SELECT inf.* FROM gerasmus.informations_etudiants inf, gerasmus.demandes_mobilites dm, gerasmus.utilisateurs usr WHERE dm.id =  ? AND  usr.id = inf.id AND usr.id = dm.id AND compte_bancaire IS NOT NULL;
	
	u_user_info			= UPDATE gerasmus.informations_etudiants SET civilite=?, nationalite=?, adresse=?, tel=?, email=?, sexe=?, compte_bancaire=?, compte_titulaire=?, nom_banque=?, code_bic=?, date_naissance=?, nb_annees_reussies=?, num_version= num_version+1 WHERE id = ? AND num_version = ?;

	

	!Query DemandeMobiliteDao
	#########################################
	c_demande_mobi		= INSERT INTO gerasmus.demandes_mobilites(date_introduction, annee_academique, etudiant, num_version) VALUES (?, ?, ?, 1);	
	
	r_annee_mobi		= SELECT dm.id, dm.date_introduction, dm.annee_academique, dm.etudiant, dm.num_version FROM gerasmus.demandes_mobilites dm, gerasmus.utilisateurs etud WHERE dm.annee_academique = ? AND dm.etudiant = etud.id AND etud.departement IN (%s) ;
	
	r_annee_user_mobi	= SELECT id, date_introduction, annee_academique, etudiant, num_version FROM gerasmus.demandes_mobilites WHERE annee_academique = ? AND etudiant = ?;
	
	r_all_annee			= SELECT DISTINCT annee_academique  FROM gerasmus.demandes_mobilites;
	
	r_etud_mobi			= SELECT dm.* FROM gerasmus.demandes_mobilites dm, gerasmus.utilisateurs etud WHERE dm.etudiant = ? AND dm.etudiant = etud.id;
#and annee_academique = ?

	!Query ChoixMobiliteDao
	#########################################
	c_mobilite 			= INSERT INTO gerasmus.choix_mobilites( candidature, etat, quadri, annule, programme, type_programme, partenaire, motif_annulation,pays , num_version) VALUES (?, ?, ?, FALSE, ?, ?, ?, NULL,?, 1);
	
	r_mobi_prog			= SELECT prog.id, prog.nom,prog.num_version FROM gerasmus.programmes prog, gerasmus.choix_mobilites cm WHERE cm.candidature = ? AND cm.num_preference = ? AND programme = prog.id 
	
	r_mobi_type_prog	= SELECT type.id, type.nom,type.num_version FROM gerasmus.types_programme type, gerasmus.choix_mobilites cm WHERE cm.candidature = ? AND cm.num_preference = ? AND type_programme = type.id 
	
	r_mob_rechercher	= SELECT cm.candidature AS id, cm.num_preference, cm.etat, cm.quadri, cm.annule, cm.programme, cm.type_programme,cm.pays, cm.partenaire, cm.motif_annulation, cm.num_version FROM gerasmus.choix_mobilites cm WHERE cm.etat ILIKE ? AND cm.candidature IN (SELECT dm.id FROM gerasmus.demandes_mobilites dm WHERE CAST(annee_academique as TEXT) LIKE ?); 
	
	r_mob_pour_demande 	= SELECT candidature AS id, num_preference, etat, pays, quadri, annule,  programme, type_programme, partenaire, motif_annulation, num_version FROM gerasmus.choix_mobilites cm WHERE cm.candidature = ?;
	
	r_mob_rchr_en_cours = SELECT cm.* FROM gerasmus.choix_mobilites cm, gerasmus.demandes_mobilites dm WHERE cm.candidature = dm.id AND dm.id = ? AND dm.annee_academique = ? AND cm.etat !=  DEMANDE_PAYEMENT_SOLDE AND cm.etat != INTRO and cm.annule = false;
	
	r_mob_avec_payement = SELECT cm.*, usr.*, dm.* FROM gerasmus.choix_mobilites cm, gerasmus.demandes_mobilites dm, gerasmus.utilisateurs usr WHERE dm.annee_academique = ? AND cm.candidature = dm.id AND dm.etudiant = usr.id AND usr.prof = false AND cm.annule = false AND (cm.etat = 'DEMANDE_PAYEMENT' OR cm.etat = 'A_PAYER_SOLDE' OR cm.etat = 'DEMANDE_PAYEMENT_SOLDE') ;
	
	r_mob_conf_for_usr  = Select * from gerasmus.utilisateurs usr, gerasmus.choix_mobilites cm, gerasmus.demandes_mobilites dm WHERE usr.id = ? AND annee_academique = ? AND dm.etudiant = usr.id AND cm.candidature = dm.id AND cm.etat != 'INTRO' AND annule = false;
	
	r_is_linked_wt_part = Select * from gerasmus.choix_mobilites WHERE partenaire = ?;
	
	u_mob_annuler  		= UPDATE gerasmus.choix_mobilites SET annule = True, motif_annulation = ?,num_version = num_version +1 WHERE candidature = ? AND num_preference = ? AND num_version = ?;
	
	u_mob_etat			= UPDATE gerasmus.choix_mobilites SET etat = ?, num_version = num_version +1, partenaire = ?  WHERE candidature = ? AND num_preference= ? AND num_version = ?;

	!Query AnnulationDao
	#########################################
	 c_annulation 		= INSERT INTO gerasmus.motifs_annulation(createur, motif,num_version) VALUES (?, ?,1);
	 
	 r_annulation		= SELECT ma.id, ma.createur,ma.motif,ma.num_version FROM gerasmus.motifs_annulation ma WHERE ma.createur IN (SELECT uti.id FROM gerasmus.utilisateurs uti WHERE uti.prof = true);
	 
	 r_mobi_annul		= SELECT ma.id, ma.createur, ma.motif, ma.num_version FROM gerasmus.motifs_annulation ma, gerasmus.choix_mobilites cm WHERE cm.motif_annulation = ma.id AND cm.candidature = ? AND cm.num_preference = ?;
	 
	 
	 !Query LogicielDao
	#########################################
	r_logiciel_encod 	= SELECT le.* FROM gerasmus.logiciels_encodes le, gerasmus.logiciels log, gerasmus.choix_mobilites ch WHERE le.id_log = log.id AND le.id_choix_cand = ? AND le.id_choix_pref = ?;
	
	r_logi_encodable    = SELECT DISTINCT l.* FROM gerasmus.logiciels l, gerasmus.programmes p, gerasmus.programmes_logiciel pl WHERE (l.id = pl.id_logiciel AND p.id = pl.id_programme AND p.id = ? OR l.id NOT IN (SELECT id_logiciel FROM gerasmus.programmes_logiciel));

	c_encodage_logiciel	= INSERT INTO gerasmus.logiciels_encodes(id_log, id_choix_cand, id_choix_pref, num_version) VALUES (?, ?, ?, 1);
	
	d_encodage_logiciel = DELETE FROM gerasmus.logiciels_encodes WHERE id_log = ? AND id_choix_cand = ? AND id_choix_pref = ?;
	# On ne tiens pas compte du numéro de verison car on ne fait jamais d'UPDATE sur la table logiciel_encodes
	
	
	!Query DocumentDao
	#########################################
	c_document_rempli    = INSERT INTO gerasmus.documents_signe(id_doc, id_choix_cand, id_choix_pref, num_version)  VALUES (?,?,?,1);
	
	d_document_rempli    = DELETE FROM gerasmus.documents_signe WHERE id_doc = ? AND candidature = ? AND num_preference = ?;
	
	r_document_a_remplir = SELECT DISTINCT doc.* FROM gerasmus.documents doc, gerasmus.choix_mobilites cm WHERE cm.candidature = ? AND num_preference = ? AND (cm.programme = doc.programme AND cm.type_programme = doc.type_programme) OR doc.type_programme IS NULL OR doc.programme IS NULL; 
	
	r_document_rempli    = SELECT DISTINCT doc.* FROM gerasmus.documents doc, gerasmus.choix_mobilites cm, gerasmus.documents_signes ds WHERE cm.candidature = ? AND num_preference = ? AND ds.id_doc = doc.id AND ds.id_choix_cand = cm.candidature AND ds.id_choix_pref = cm.num_preference;
	
	